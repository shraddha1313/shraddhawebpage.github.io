"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.URLChangeObservable = void 0;
const analytics_generic_utils_1 = require("@segment/analytics-generic-utils");
// This seems hacky, but if using react router (or other SPAs), popstate will not always fire on navigation
// Otherwise, we could use popstate / hashchange events
class URLChangeObservable {
    constructor() {
        this.emitter = new analytics_generic_utils_1.Emitter();
        this.pollInterval = 500;
        this.pollURLChange();
    }
    pollURLChange() {
        let prevUrl = window.location.href;
        setInterval(() => {
            const currentUrl = window.location.href;
            if (currentUrl != prevUrl) {
                this.emitter.emit('change', prevUrl);
                prevUrl = currentUrl;
            }
        }, this.pollInterval);
    }
    subscribe(urlChanged) {
        this.urlChanged = urlChanged;
        this.emitter.on('change', this.urlChanged);
    }
    unsubscribe() {
        this.emitter.off('change', this.urlChanged);
    }
}
exports.URLChangeObservable = URLChangeObservable;
//# sourceMappingURL=index.js.map