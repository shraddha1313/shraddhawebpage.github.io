import { SignalsRuntime } from '../shared/signals-runtime';
export class MobileSignalsRuntime extends SignalsRuntime {
    constructor(signals = []) {
        super(signals);
        this.add = (signal) => {
            if (this.signalCounter < 0) {
                this.signalCounter = 0;
            }
            if ('index' in signal && signal.index == -1) {
                // this was previously broken for ages, not sure when this code path would ever be used.
                // My understanding is that currently, getNextIndex() is called _outside_ of this function and used to construct the added signal. - seth
                signal.index = this.getNextIndex();
            }
            this.signalBuffer.unshift(signal);
            if (this.signalBuffer.length > this.maxBufferSize) {
                this.signalBuffer.pop();
            }
        };
        this.getNextIndex = () => {
            const index = this.signalCounter;
            this.signalCounter += 1;
            return index;
        };
        this.signalCounter = 0;
        this.maxBufferSize = 1000;
    }
}
//# sourceMappingURL=mobile-signals-runtime.js.map