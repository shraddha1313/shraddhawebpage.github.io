import { resolveAliasArguments, resolveArguments, resolvePageArguments } from '@segment/analytics-next';
export declare const resolvers: {
    resolveAliasArguments: typeof resolveAliasArguments;
    resolveArguments: typeof resolveArguments;
    resolvePageArguments: typeof resolvePageArguments;
    resolveUserArguments: (id?: object | import("@segment/analytics-next").ID, traits?: import("@segment/analytics-next").Callback<import("@segment/analytics-core").CoreContext<import("@segment/analytics-core").CoreSegmentEvent>> | import("@segment/analytics-next").Traits | null | undefined, options?: import("@segment/analytics-next").Callback<import("@segment/analytics-core").CoreContext<import("@segment/analytics-core").CoreSegmentEvent>> | import("@segment/analytics-next").Options | undefined, callback?: import("@segment/analytics-next").Callback<import("@segment/analytics-core").CoreContext<import("@segment/analytics-core").CoreSegmentEvent>> | undefined) => [import("@segment/analytics-next").ID, import("@segment/analytics-next").Traits, import("@segment/analytics-next").Options, import("@segment/analytics-next").Callback<import("@segment/analytics-core").CoreContext<import("@segment/analytics-core").CoreSegmentEvent>> | undefined];
};
//# sourceMappingURL=arg-resolvers.d.ts.map