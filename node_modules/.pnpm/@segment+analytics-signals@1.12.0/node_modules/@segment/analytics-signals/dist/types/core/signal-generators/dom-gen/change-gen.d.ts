import { SignalEmitter } from '../../emitter';
import { SignalGlobalSettings } from '../../signals';
import { SignalGenerator } from '../types';
import { MutationObservableSettings } from './mutation-observer';
export declare class MutationGeneratorSettings extends MutationObservableSettings {
}
export declare class MutationChangeGenerator implements SignalGenerator {
    id: string;
    private elMutObserver;
    /**
     * Custom selectors that should be ignored by the mutation observer
     * e.g if you have a custom input field that is not a standard input field, you can add it here
     */
    customSelectors: never[];
    constructor(settings: SignalGlobalSettings);
    register(emitter: SignalEmitter): () => void;
}
export declare class OnChangeGenerator implements SignalGenerator {
    id: string;
    register(emitter: SignalEmitter): () => void;
}
export declare class ContentEditableChangeGenerator implements SignalGenerator {
    id: string;
    register(emitter: SignalEmitter): () => void;
}
//# sourceMappingURL=change-gen.d.ts.map