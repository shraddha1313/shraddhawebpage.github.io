import { logger } from '../../lib/logger';
import { isClass } from '../../utils/is-class';
export const registerGenerator = async (emitter, signalGenerators, settings) => {
    const _register = (gen) => {
        logger.debug('Registering generator:', gen.id || gen.name);
        if (isClass(gen)) {
            // Check if Gen is a function and has a constructor
            return new gen(settings).register(emitter);
        }
        else {
            return gen.register(emitter);
        }
    };
    const cleanupFns = await Promise.all(signalGenerators.map(_register));
    // Return a cleanup function that calls all the cleanup functions (e.g unsubscribes from event listeners)
    return () => cleanupFns.forEach((fn) => fn());
};
//# sourceMappingURL=register.js.map